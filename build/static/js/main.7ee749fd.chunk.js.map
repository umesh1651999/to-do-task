{"version":3,"sources":["Components/Header/Header.js","Components/AddEntry/AddEntry.js","Components/SignUp/SignUp.js","Components/Login/Login.js","Components/AddBtn/AddBtn.js","Components/Tasks/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["Header","loginStatus","className","localStorage","getItem","onClick","clear","AddEntry","removeAddComponent","addNewEntry","get","useState","title","setTitle","todo","setTodo","priority","setPriority","useToasts","addToast","type","onChange","e","target","value","name","SignUp","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","contact","setContact","setSignInStatus","placeholder","required","to","alert","axios","post","params","then","res","catch","err","console","log","Login","data","token","setItem","id","AddBtn","add","alt","src","Tasks","tasks","removeTask","setSortByValue","setSortBy","selected","disabled","hidden","map","task","from","opacity","marginLeft","props","style","key","App","counter","setCounter","showAddComponent","setShowAddComponent","showAddBtn","setShowAddBtn","setTasks","setLogin","sortBy","changeLoginstatusToTrue","headers","Authorization","userId","getAllTasks","appearance","autoDismiss","placement","message","newTasks","entry","push","useEffect","path","exact","component","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7ee749fd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\n\nexport const Header = ({ loginStatus }) => {\n  const logout = () => {\n    localStorage.clear();\n    loginStatus();\n  };\n  return (\n    <section className=\"header\">\n      <section>\n        <h1 className=\"headerText\">To Do Work</h1>\n      </section>\n      {localStorage.getItem(\"token\") ? (\n        <section className=\"profileDiv\">\n          <div className=\"profile\"></div>\n          <section className=\"name\">{localStorage.getItem(\"username\")}</section>\n          <section className=\"logout\" onClick={logout}>\n            Logout\n          </section>\n        </section>\n      ) : (\n        <section className=\"genToken\">\n          <section className=\"login\">Login</section>\n          <section className=\"signup\">SignUp</section>\n        </section>\n      )}\n    </section>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport \"./AddEntry.css\";\n\nexport const AddEntry = ({ removeAddComponent, addNewEntry, get }) => {\n  const [title, setTitle] = useState(\"\");\n  const [todo, setTodo] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const printStates = () => {\n    addNewEntry(title, todo, priority);\n  };\n  return (\n    <section className=\"wrapper\">\n      <div className=\"removeIcon\" onClick={() => removeAddComponent()}>\n        <span className=\"glyphicon glyphicon-remove\"></span>\n      </div>\n      <section className=\"addEntry\">\n        <section className=\"input\">\n          <label>Title</label>\n          <div className=\"titleContainer\">\n            <input\n              type=\"text\"\n              className=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </div>\n        </section>\n        <section className=\"input\">\n          <div>\n            <label>Enter TODO</label>\n          </div>\n          <div className=\"todoContainer\">\n            <input\n              type=\"text\"\n              className=\"todo\"\n              onChange={(e) => setTodo(e.target.value)}\n            />\n          </div>\n        </section>\n        <section className=\"input\">\n          <div>\n            <label>Priority</label>\n          </div>\n          <div className=\"radioContainer\">\n            <label className=\"radio-inline\">\n              <input\n                type=\"radio\"\n                name=\"option\"\n                onChange={(e) => setPriority(\"LOW\")}\n              />\n              LOW\n            </label>\n            <label className=\"radio-inline\">\n              <input\n                type=\"radio\"\n                name=\"option\"\n                onChange={(e) => setPriority(\"HIGH\")}\n              />\n              HIGH\n            </label>\n          </div>\n        </section>\n      </section>\n      <section className=\"btnWrapper\">\n        <button className=\"addBtn\" onClick={printStates}>\n          ADD\n        </button>\n      </section>\n    </section>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./SignUp.css\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\n// This is signUp component which is used to signup in the website.\nexport const SignUp = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  //   const [designation, setDesignation] = useState(\"\");\n  //   const [dob, setDob] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [signInStatus, setSignInStatus] = useState();\n  //   const [signupError, setSignupError] = useState() ;\n\n  // This function will hit an API which will signup the user by stroring the data into the db.\n  const clicked = () => {\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match\");\n    } else {\n      axios\n        .post(\"http://localhost:5000/signup\", null, {\n          params: {\n            name,\n            email,\n            password,\n            confirmPassword,\n            contact,\n          },\n        })\n        .then(function (res) {\n          setSignInStatus(true);\n          alert(\"new user added\");\n        })\n        .catch(function (err) {\n          setSignInStatus(false);\n          console.log(err);\n          alert(\"Problem while signing up...try again later\");\n        });\n    }\n  };\n  return (\n    <section className=\"mainSignUpContainer\">\n      <section className=\"wrapperSignup\">\n        <form className=\"SignUpOuterPart\">\n          <h2 className=\"loginHead\">STARTECH</h2>\n          <input\n            className=\"SignUpinputs\"\n            type=\"input\"\n            placeholder=\"Full Name\"\n            name=\"fullName\"\n            onChange={(e) => setName(e.target.value)}\n            value={name}\n            required\n          />\n          <input\n            className=\"SignUpinputs\"\n            type=\"input\"\n            placeholder=\"Email\"\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            required\n          />\n          <input\n            className=\"SignUpinputs\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            required\n          />\n          <input\n            className=\"SignUpinputs\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"confirmPassword\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            value={confirmPassword}\n            required\n          />\n          <input\n            className=\"SignUpinputs\"\n            type=\"text\"\n            placeholder=\"Contact No.\"\n            name=\"contact\"\n            onChange={(e) => setContact(e.target.value)}\n            value={contact}\n            required\n          />\n          <section>\n            <Link to=\"/login\">\n              <button className=\"buttoninput\" onClick={clicked}>\n                Submit\n              </button>\n            </Link>\n            or{\" \"}\n            <Link to=\"/login\">\n              <button className=\"btn2\"> Login </button>\n            </Link>{\" \"}\n            Instead?\n          </section>\n        </form>\n      </section>\n    </section>\n  );\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Login.css\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\n\nexport const Login = ({ loginStatus }) => {\n  // Declaring the state of usernama and password.\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [loginError, setLoginError] = useState(\"\");\n  // This function will hit the API when login button is clicked.\n  // And it will check if it is a valid user or not\n  // let error = \"\";\n  const clicked = () => {\n    axios\n      .post(\"http://localhost:5000/login\", null, {\n        params: {\n          email,\n          password,\n        },\n      })\n      .then(function (res) {\n        console.log(res);\n        if (!res.data.token) {\n          alert(\"Please Enter Correct Email and Password.\");\n        } else {\n          loginStatus();\n          localStorage.setItem(\"token\", res.data.token);\n          localStorage.setItem(\"username\", res.data.name);\n          localStorage.setItem(\"id\", res.data.id);\n        }\n      })\n      .catch(function (err) {\n        alert(\"Login error\");\n        console.log(err);\n      });\n  };\n  return (\n    <section className=\"wrappers\">\n      <form className=\"outerPart\">\n        <h2 className=\"loginHead\">STARTECH</h2>\n        <input\n          className=\"inputs\"\n          type=\"input\"\n          placeholder=\"Email\"\n          name=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n        />\n        <input\n          className=\"inputs\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n        />\n        {localStorage.getItem(\"token\") ? <Redirect to=\"/tasks\" /> : null}\n        <section>\n          <button className=\"button buttoninput\" onClick={clicked}>\n            Login\n          </button>\n          or{\" \"}\n          <Link to=\"/signup\">\n            <button className=\"btn2\"> Signup </button>\n          </Link>{\" \"}\n          Instead?\n        </section>\n      </form>\n    </section>\n  );\n};\n","import React from \"react\";\nimport \"./AddBtn.css\";\n\nexport const AddBtn = ({ add }) => {\n  return (\n    <section className=\"addButtonContainer\">\n      <img\n        onClick={() => add()}\n        alt=\"Add-Button\"\n        className=\"addBtnImg\"\n        src=\"https://www.searchpng.com/wp-content/uploads/2019/03/AddButt-butt-200x200.png\"\n      />\n    </section>\n  );\n};\n","import React from \"react\";\nimport { Spring } from \"react-spring/renderprops\";\nimport \"./Tasks.css\";\n\nexport const Tasks = ({ tasks, removeTask, setSortByValue }) => {\n  const setSortBy = (e) => {\n    setSortByValue(e);\n  };\n  return (\n    <section className=\"taskContainer\">\n      {/* {console.log(typeof tasks)} */}\n      {typeof tasks !== typeof \" \" ? (\n        <section className=\"topLine\">\n          <section>\n            <p className=\"taskList\">TaskList :</p>\n          </section>\n          <section>\n            <select\n              name=\"sortBy\"\n              className=\"dropDown\"\n              onChange={(e) => setSortBy(e)}\n            >\n              <option value=\"\" selected disabled hidden>\n                Sort by:\n              </option>\n              <option value=\"priority\">Priority</option>\n              <option value=\"date\">Date</option>\n            </select>\n          </section>\n        </section>\n      ) : (\n        \"\"\n      )}\n      {typeof tasks !== typeof \" \" ? (\n        tasks.map((task) => (\n          <Spring\n            from={{ opacity: 0, marginLeft: -100 }}\n            to={{ opacity: 1, marginLeft: 0 }}\n          >\n            {(props) => (\n              <div style={props}>\n                <section key={task.id}>\n                  <section className=\"taskData\">\n                    <div>\n                      <p className=\"titleName\">{task.title}</p>\n                    </div>\n                    <div className=\"priorityContainer\">\n                      <p className=\"priority\">{task.priority}</p>\n                    </div>\n                    <div>\n                      <div className=\"removeBtnContainer\">\n                        <button\n                          className=\"removeButton\"\n                          onClick={() => removeTask(task.id)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </section>\n                  <section className=\"priorityInfo\">\n                    <span>\n                      <p className=\"titleData\">{task.data}</p>\n                    </span>\n                  </section>\n                </section>\n              </div>\n            )}\n          </Spring>\n        ))\n      ) : (\n        <p className=\"noTask\">No task at the moment...</p>\n      )}\n    </section>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { Header } from \"./Components/Header/Header\";\nimport { AddEntry } from \"./Components/AddEntry/AddEntry\";\nimport { SignUp } from \"./Components/SignUp/SignUp\";\nimport { Login } from \"./Components/Login/Login\";\nimport { AddBtn } from \"./Components/AddBtn/AddBtn\";\nimport { Tasks } from \"./Components/Tasks/Tasks\";\nimport { Spring, interpolate } from \"react-spring/renderprops\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\n// import { Success } from \"./Components/Success/Success\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n  const [showAddComponent, setShowAddComponent] = useState(false);\n  const [showAddBtn, setShowAddBtn] = useState(true);\n  const [tasks, setTasks] = useState([]);\n  const [priority, setPriority] = useState(false);\n  const [login, setLogin] = useState();\n  const [sortBy, setSortBy] = useState(\"\");\n  // const [error, setError] = useState(\"\");\n  // const [token, setToken] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const removeAddComponent = () => {\n    setShowAddComponent(false);\n    setShowAddBtn(true);\n    console.log(\"njjnn\");\n    setCounter(counter + 1);\n  };\n  const changeLoginstatusToTrue = () => {\n    setLogin(true);\n  };\n  const changeLoginstatusToFalse = () => {\n    setLogin(false);\n  };\n  const addComponent = () => {\n    setShowAddComponent(true);\n    setShowAddBtn(false);\n    console.log(tasks);\n  };\n  const setSortByValue = (e) => {\n    setSortBy(e.target.value);\n    console.log(e.target.value);\n  };\n  const addNewEntry = (title, data, priority) => {\n    console.log(\"hey\");\n    console.log(localStorage.getItem(\"token\"));\n    axios\n      .post(\"http://localhost:5000/addTask\", null, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        params: {\n          title,\n          data,\n          priority,\n          userId: localStorage.getItem(\"id\"),\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        removeAddComponent();\n        getAllTasks();\n        addToast(\"Task added\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          placement: \"bottom-left\",\n        });\n      })\n      .catch((err) => console.log(err));\n    console.log(\"data added\");\n  };\n  const getAllTasks = () => {\n    console.log(localStorage.getItem(\"token\"));\n    axios\n      .post(\"http://localhost:5000/getAllTasks\", null, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        params: {\n          userId: localStorage.getItem(\"id\"),\n        },\n      })\n      .then((res) => {\n        return res.data;\n      })\n      .then((res) => {\n        console.log(res.message);\n        console.log(sortBy);\n        if (res.message != \"login again\") {\n          console.log(\"nbjnn\");\n          if (sortBy === \"priority\" && typeof res !== typeof \" \") {\n            const newTasks = [];\n            res.map((entry) => {\n              if (entry.priority === \"HIGH\") {\n                newTasks.push(entry);\n              }\n            });\n            res.map((entry) => {\n              if (entry.priority === \"LOW\") {\n                newTasks.push(entry);\n              }\n            });\n            setTasks(newTasks);\n          } else {\n            setTasks(res);\n          }\n        } else {\n          localStorage.clear();\n          setLogin(false);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const removeTask = (id) => {\n    axios\n      .post(\"http://localhost:5000/deleteTask\", null, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\"),\n        },\n        params: {\n          id: id,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        getAllTasks();\n        addToast(\"Task deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getAllTasks();\n  }, [sortBy]);\n  return (\n    <div>\n      <BrowserRouter>\n        <Route path=\"/login\" exact>\n          <Login loginStatus={changeLoginstatusToTrue} />\n        </Route>\n        <Route path=\"/\" exact>\n          <Login loginStatus={changeLoginstatusToTrue} />\n        </Route>\n        <Route path=\"/signup\" exact component={SignUp}></Route>\n        {localStorage.getItem(\"token\") ? (\n          <Route path=\"/tasks\" exact>\n            <Header loginStatus={changeLoginstatusToFalse} />\n            <Tasks\n              tasks={tasks}\n              removeTask={removeTask}\n              setSortByValue={setSortByValue}\n            />\n            {showAddComponent ? (\n              <Spring\n                from={{ opacity: 0, marginBottom: -100 }}\n                to={{ opacity: 1, marginBottom: 0 }}\n              >\n                {(props) => (\n                  <div style={props}>\n                    <AddEntry\n                      removeAddComponent={removeAddComponent}\n                      addNewEntry={addNewEntry}\n                      get={getAllTasks}\n                    />\n                  </div>\n                )}\n              </Spring>\n            ) : null}\n            {showAddBtn ? <AddBtn add={addComponent} /> : null}\n          </Route>\n        ) : (\n          <Route path=\"/tasks\" exact>\n            <Login loginStatus={changeLoginstatusToTrue} />\n          </Route>\n        )}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider placement=\"bottom-left\">\n      <App />\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}